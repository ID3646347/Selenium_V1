import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeGroups;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class Login_TestNG {
	WebDriver driver;
	String expected, actual;
	
@BeforeClass
	public void beforeTest() {
	System.setProperty("webdriver.gecko.driver","C:/Users/admin/Downloads/geckodriver-v0.16.1-win64/geckodriver.exe");
	WebDriver driver = new FirefoxDriver();
	driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		  
	  }

  @BeforeMethod
  public void beforeMethod() {
	  driver.get("http://adactin.com/HotelApp/");
	  
  }
  
  @Test
  public void CorrectLogin() {
	  WebElement element = driver.findElement(By.id("username"));
	  element.sendKeys("ID3646347");
		
	  driver.findElement(By.id("password")).sendKeys("January101979");
	  driver.findElement(By.id("password")).sendKeys(Keys.TAB);
	  
		
	  driver.findElement(By.id("login")).click();
	  expected = "Hello ID3646347";
	  actual = driver.findElement(By.id("username_show")).getAttribute("value");
	  Assert.assertEquals(expected,actual);
	  
  }
  
  @Test
  public void IncorrectLogin() {
	  WebElement element = driver.findElement(By.id("username"));
	  element.sendKeys("ID3646347");
		
	  driver.findElement(By.id("password")).sendKeys("January101979T");
	  driver.findElement(By.id("password")).sendKeys(Keys.TAB);
		
	  driver.findElement(By.id("login")).click();
	  
	  expected = "Invalid Login Details";
	  actual = driver.findElement(By.tagName("b")).getText();
	  Assert.assertEquals(expected,actual);
	  
  }
  
  @AfterMethod
  public void afterMethod() {
	  System.out.println("After Method");
	  
  }
  
  @AfterClass
  public void afterclass() {
	  driver.quit();
  }
  
}
